Project Summary:
	Pages:
		- Launcher View: add/search new people/groups to your launcher; rearrange; log out
		- UsersView: photo grid w/ flags; header & iAd footer
		- PhotoView: profile photo & info; favorite, block, & chat buttons
		- ProfileView: edit profile fields, filters, & groups; edit group specific settings
		- ChatView: chat; more button to send location, photo, clear chat. Push notifications
		- Interface w/ Network Server. FBConnect & Twitter. Test & final touches

	Server:
		- Chat with someone
		- Handle Block & Favorite buttons
		- Make Team Page
		- Create user if doesn't yet exist: find({ :device_id: id }); update location.
		- Update profile info & photo

	Chat Server:
		- node.js & redis
		- Respond with new messages on connect
		- Send message
		- Receive message
		- Websockets HTML5 - http://github.com/gimite/web-socket-ruby
		- erlang & ejabberd
		- Send location
		- Send photo

	Put User info on Photo View:
		- Get User info from User instance created from JSON
		- Make it just like Grindr for now, except keep header the bluish-gray color it is now, not yellow
		- Include Chat, Favorite, and Block buttons
	Load Thumbnail View:
		- Load JSON Users into NSMutableArray and load into tableView
		- For each User object, load thumbnail photo:
			- First, randomly load different shades & versions of default (blank) photo
			- Show spinning dashes to signify that thumbnail is in the process of being loaded
		- Add flair: username, red number, star, green dot, blue & yellow border/background
		- Add refresh button (spin) & load more guys (disable)
	ChatView:
		- ChatContentHeader Buttons: Call, Contact Info/Add to Contacts, [Load Earlier Messages]
		- Send photos, video, location. 
		- Edit: delete, forward, clear all
			- Put each timestamp in its own cell
		- Rebuild ChatInput & ChatBar with graphics, not background images
		- Support landscape orientation
		- Touch ChatContentView to close keyboard
		- Like Facebook chat, twitterfon show a small thumbnail of profile photo next to each message
Recurring:
	- Push to Git after adding each new feature. Make sure it builds first.
	- Keep TODO, README (getting started, etc.), RECIPES, HISTORY, etc. up to date
Backlog:
	Git:
		- Make acani-iphone a Git submodule
	Server:
		- Get rackspace setup
Get Matt Situated:
	- get him a wireless card so he can use wireless on train
	- Get new bag
	- Get sleep
